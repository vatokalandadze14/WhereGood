// <auto-generated />
using HouseOwnerWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HouseOwnerWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240314224648_Initial4")]
    partial class Initial4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HouseOwnerWebApi.Models.Adress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnnouncmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitute")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Municipality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncmentId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("HouseOwnerWebApi.Models.Announcment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseOwnerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PropertyType")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseOwnerId");

                    b.ToTable("Announcments");
                });

            modelBuilder.Entity("HouseOwnerWebApi.Models.HouseOwner", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Agent")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HouseOwners");
                });

            modelBuilder.Entity("HouseOwnerWebApi.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnnouncmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncmentId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("HouseOwnerWebApi.Models.Price", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnnouncmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SquareMeterGEL")
                        .HasColumnType("int");

                    b.Property<int>("SquareMeterUSD")
                        .HasColumnType("int");

                    b.Property<int>("TotalGEL")
                        .HasColumnType("int");

                    b.Property<int>("TotalUSD")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncmentId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("HouseOwnerWebApi.Models.Adress", b =>
                {
                    b.HasOne("HouseOwnerWebApi.Models.Announcment", "Announcment")
                        .WithMany()
                        .HasForeignKey("AnnouncmentId");

                    b.Navigation("Announcment");
                });

            modelBuilder.Entity("HouseOwnerWebApi.Models.Announcment", b =>
                {
                    b.HasOne("HouseOwnerWebApi.Models.HouseOwner", "HouseOwner")
                        .WithMany("Announcments")
                        .HasForeignKey("HouseOwnerId");

                    b.Navigation("HouseOwner");
                });

            modelBuilder.Entity("HouseOwnerWebApi.Models.Image", b =>
                {
                    b.HasOne("HouseOwnerWebApi.Models.Announcment", "Announcment")
                        .WithMany()
                        .HasForeignKey("AnnouncmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Announcment");
                });

            modelBuilder.Entity("HouseOwnerWebApi.Models.Price", b =>
                {
                    b.HasOne("HouseOwnerWebApi.Models.Announcment", "Announcment")
                        .WithMany()
                        .HasForeignKey("AnnouncmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Announcment");
                });

            modelBuilder.Entity("HouseOwnerWebApi.Models.HouseOwner", b =>
                {
                    b.Navigation("Announcments");
                });
#pragma warning restore 612, 618
        }
    }
}
